import numpy as np 
import cv2
import os
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
from sklearn.feature_selection import SelectKBest, f_classif
from skimage.feature import hog
import warnings 

warnings.filterwarnings ("ignore")
# Ignore the specific warning globally
warnings.filterwarnings("ignore", category=UserWarning, module="sklearn")

# -----------------------------------------------

def HOG_for_dataset(dataset_path):
    X = []
    Y = []

    for label ,category in enumerate(os.listdir(dataset_path)):

        category_path = os.path.join(dataset_path, category)

        print(category_path)

        if os.path.isdir(category_path):

            for image in os.listdir(category_path):

                image_path = os.path.join(category_path, image)
                image = cv2.imread(image_path , cv2.IMREAD_GRAYSCALE)

                fd= hog(image, orientations=8, pixels_per_cell=(4, 4), cells_per_block=(1, 1), visualize=False)

                X.append(fd)
                Y.append(label)
    return np.array(X) , np.array(Y)
# -----------------------------------------------

train_path = 'mnist_png\\training'
X_train , Y_train = HOG_for_dataset(train_path)

test_path = 'mnist_png\\testing'
X_test , Y_test =  HOG_for_dataset(test_path)

# -----------------------------------------------

clf_withoutGenetic = SVC(kernel='rbf')
clf_withoutGenetic.fit(X_train, Y_train)

Predictions = clf_withoutGenetic.predict(X_test)
accuracy_withoutGenetic = accuracy_score(Y_test, Predictions) * 100
print (accuracy_withoutGenetic) 
